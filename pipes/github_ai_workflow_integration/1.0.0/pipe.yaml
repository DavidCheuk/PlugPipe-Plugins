apiVersion: v1
kind: PipeSpec
metadata:
  name: github-ai-workflow-integration
  owner: PlugPipe Team
  version: 1.0.0
  tags:
  - github
  - mcp
  - ai
  - automation
  - devops
  - cicd
  doc: Comprehensive GitHub workflow combining MCP-compatible operations with AI-powered
    analysis
inputs: {}
pipeline:
- name: repository_discovery
  plugin: github_mcp_compatible
  description: Gather repository information using MCP-compatible operations
  config:
    github:
      token: ${GITHUB_TOKEN}
    toolsets:
    - repos
    - issues
    - pull_requests
    - actions
    - code_security
    read_only: false
  input:
    operation: get_repository
    owner: '{{config.target_repo.owner}}'
    repo: '{{config.target_repo.repo}}'
  output_mapping:
    repo_info: github_mcp_result
    discovery_status: github_mcp_status
  id: step_1
  uses: name
  with: {}
- name: security_scan_basic
  plugin: github_mcp_compatible
  description: Scan for security alerts and vulnerabilities
  config:
    github:
      token: ${GITHUB_TOKEN}
    toolsets:
    - code_security
  input:
    operation: list_dependabot_alerts
    owner: '{{config.target_repo.owner}}'
    repo: '{{config.target_repo.repo}}'
    state: open
    limit: 50
  output_mapping:
    security_alerts: github_mcp_result.dependabot_alerts
    security_count: github_mcp_result.dependabot_alerts.length
  id: step_2
  uses: name
  with: {}
- name: cicd_analysis
  plugin: github_mcp_compatible
  description: Analyze CI/CD workflow status
  config:
    github:
      token: ${GITHUB_TOKEN}
    toolsets:
    - actions
  input:
    operation: list_workflow_runs
    owner: '{{config.target_repo.owner}}'
    repo: '{{config.target_repo.repo}}'
    status: completed
    limit: 20
  output_mapping:
    workflow_runs: github_mcp_result.workflow_runs
    workflow_status: github_mcp_status
  id: step_3
  uses: name
  with: {}
- name: ai_health_analysis
  plugin: pp_github_automation
  description: Comprehensive AI analysis of repository health
  config:
    github:
      auth_method: token
      token: ${GITHUB_TOKEN}
    llm:
      provider: openai
      api_key: ${OPENAI_API_KEY}
      model: gpt-4
      temperature: 0.1
    automation_settings:
      auto_comment: false
      auto_label: false
  input:
    operation: analyze_repository
    owner: '{{config.target_repo.owner}}'
    repo: '{{config.target_repo.repo}}'
    analysis_depth: '{{config.workflow_mode}}'
  output_mapping:
    health_score: pp_github_result.health_score
    ai_insights: pp_github_result.ai_analysis
    health_recommendations: pp_github_result.recommendations
  id: step_4
  uses: name
  with: {}
- name: ai_security_analysis
  plugin: pp_github_automation
  description: AI-powered security vulnerability analysis
  config:
    github:
      auth_method: token
      token: ${GITHUB_TOKEN}
    llm:
      provider: openai
      api_key: ${OPENAI_API_KEY}
      model: gpt-4
  input:
    operation: security_scan
    owner: '{{config.target_repo.owner}}'
    repo: '{{config.target_repo.repo}}'
    scan_depth: comprehensive
  output_mapping:
    security_analysis: pp_github_result
    security_recommendations: pp_github_result.ai_insights.security_recommendations
  id: step_5
  uses: name
  with: {}
- name: create_analysis_report
  plugin: github_mcp_compatible
  description: Create comprehensive analysis report
  config:
    github:
      token: ${GITHUB_TOKEN}
    toolsets:
    - repos
    auto_branch_creation: true
  input:
    operation: create_or_update_file
    owner: '{{config.target_repo.owner}}'
    repo: '{{config.target_repo.repo}}'
    path: reports/ai_analysis_{{timestamp}}.md
    content: '# AI-Powered Repository Analysis Report


      **Generated**: {{timestamp}}

      **Repository**: {{config.target_repo.owner}}/{{config.target_repo.repo}}

      **Analysis Mode**: {{config.workflow_mode}}


      ## Repository Health Score

      **Overall Score**: {{ai_health_analysis.health_score}}/10


      ## Key Insights

      {{ai_health_analysis.ai_insights}}


      ## Security Analysis

      - **Dependabot Alerts**: {{security_scan_basic.security_count}}

      - **AI Security Assessment**: {{ai_security_analysis.security_analysis}}


      ## CI/CD Status

      - **Recent Workflow Runs**: {{cicd_analysis.workflow_runs.length}}

      - **Latest Status**: {{cicd_analysis.workflow_runs[0].conclusion}}


      ## Recommendations

      {{ai_health_analysis.health_recommendations}}


      ## Security Recommendations

      {{ai_security_analysis.security_recommendations}}


      ---

      *Report generated by PlugPipe AI Workflow Integration*

      '
    message: Add AI analysis report - {{timestamp}}
    branch: analysis/ai-report-{{timestamp}}
  output_mapping:
    report_created: github_mcp_result
    report_branch: analysis/ai-report-{{timestamp}}
  id: step_6
  uses: name
  with: {}
- name: create_action_items
  plugin: github_mcp_compatible
  description: Create issues for critical findings that need attention
  condition: '{{ai_health_analysis.health_score < 6 || security_scan_basic.security_count
    > 0}}'
  config:
    github:
      token: ${GITHUB_TOKEN}
    toolsets:
    - issues
  input:
    operation: create_issue
    owner: '{{config.target_repo.owner}}'
    repo: '{{config.target_repo.repo}}'
    title: 'ðŸ¤– AI Analysis: Critical Issues Detected - {{timestamp}}'
    body: '# AI Analysis Alert


      Our AI-powered analysis has detected critical issues requiring attention:


      ## Health Score Alert

      - **Current Score**: {{ai_health_analysis.health_score}}/10

      - **Status**: {{ai_health_analysis.health_score < 5 ? ''CRITICAL'' : ''NEEDS
      ATTENTION''}}


      ## Security Alerts

      - **Open Dependabot Alerts**: {{security_scan_basic.security_count}}


      ## Recommendations

      {{ai_health_analysis.health_recommendations}}


      ## Detailed Report

      See full analysis report in branch: `{{create_analysis_report.report_branch}}`


      ---

      ðŸ¤– *Auto-generated by PlugPipe AI Workflow*

      '
    labels:
    - ai-analysis
    - needs-attention
    - automation
    assignees: []
  output_mapping:
    issue_created: github_mcp_result
    issue_number: github_mcp_result.number
  id: step_7
  uses: name
  with: {}
- name: ai_issue_prioritization
  plugin: pp_github_automation
  description: AI-powered prioritization of existing issues
  config:
    github:
      auth_method: token
      token: ${GITHUB_TOKEN}
    llm:
      provider: openai
      api_key: ${OPENAI_API_KEY}
      model: gpt-4
    automation_settings:
      auto_label: true
  input:
    operation: prioritize_issues
    owner: '{{config.target_repo.owner}}'
    repo: '{{config.target_repo.repo}}'
    prioritization_criteria:
      business_impact: high
      security_impact: critical
      user_experience: high
      technical_debt: medium
  output_mapping:
    issue_priorities: pp_github_result
    prioritization_insights: pp_github_result.ai_insights
  id: step_8
  uses: name
  with: {}
summary:
  format: table
  doc: Pipeline execution summary for github-ai-workflow-integration
copyright:
  owner: PlugPipe Team
  year: 2025
  notice: Copyright Â© 2025 PlugPipe Team. All rights reserved.
license: MIT
license_url: https://opensource.org/licenses/MIT
spdx_license_identifier: MIT
