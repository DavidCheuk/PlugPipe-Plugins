apiVersion: v1
kind: PipeSpec
metadata:
  performance_requirements:
    max_latency_ms: 500
    min_success_rate: 95
    max_throughput_rps: 100
  compliance_frameworks:
  - GDPR
  - CCPA
  security_level: high
  data_classification: PII
inputs:
  webhook_payload:
    type: object
    required: true
    description: Customer data from external webhook
    schema:
      type: object
      required:
      - event_type
      - customer
      properties:
        event_type:
          type: string
          enum:
          - customer.created
          - customer.updated
          - customer.deleted
        timestamp:
          type: string
          format: date-time
        customer:
          type: object
          required:
          - id
          - email
          - name
          - address
          properties:
            id:
              type: string
              pattern: ^[a-z]+_[a-zA-Z0-9]+$
            email:
              type: string
              format: email
            name:
              type: string
              minLength: 2
            phone:
              type: string
              pattern: ^\+[1-9]\d{1,14}$
            address:
              type: object
              required:
              - street
              - city
              - state
              - zip
              - country
            metadata:
              type: object
            privacy_consent_gdpr:
              type: boolean
              default: false
            privacy_consent_ccpa:
              type: boolean
              default: false
  api_key:
    type: string
    required: true
    description: API key for authentication
    sensitive: true
pipeline:
- name: authenticate_request
  plugin: security.comprehensive_auth
  version: 1.0.0
  config:
    operation: validate_api_key
    api_key: ${inputs.api_key}
    rate_limit_per_minute: 100
    require_https: true
  outputs:
    authenticated: boolean
    client_id: string
  on_error:
    action: fail
    message: Authentication failed
- name: validate_privacy_compliance
  plugin: agents.privacy_verification_agent_factory
  version: 1.0.0
  config:
    operation: validate_compliance
    compliance_frameworks:
    - GDPR
    - CCPA
    pii_fields:
    - email
    - name
    - phone
    - address
    require_explicit_consent: true
    validation_rules:
      gdpr:
        require_consent: true
        allow_processing_without_consent: false
      ccpa:
        require_disclosure: true
        allow_opt_out: true
  inputs:
    customer_data: ${inputs.webhook_payload.customer}
  outputs:
    compliant: boolean
    violations: array
  on_error:
    action: fail
    message: Privacy compliance check failed
- name: validate_data_consistency
  plugin: agents.consistency_agent_factory
  version: 1.0.0
  config:
    operation: validate_schema
    validation_type: strict
    check_uniqueness: true
    uniqueness_fields:
    - email
    - id
    required_fields:
    - id
    - email
    - name
    - address
    field_validations:
      email:
        format: email
        unique: true
      id:
        pattern: ^[a-z]+_[a-zA-Z0-9]+$
        unique: true
      phone:
        format: e164
        optional: true
      address:
        type: object
        required_subfields:
        - street
        - city
        - state
        - zip
        - country
  inputs:
    data: ${inputs.webhook_payload.customer}
  outputs:
    valid: boolean
    errors: array
  on_error:
    action: fail
    message: Data validation failed
- name: store_customer_data
  plugin: data.sqlite_manager
  version: 1.0.0
  config:
    operation: insert
    db_path: /tmp/customers.db
    table: customers
    schema:
      id: TEXT PRIMARY KEY
      email: TEXT NOT NULL UNIQUE
      name: TEXT NOT NULL
      phone: TEXT
      address_street: TEXT
      address_city: TEXT
      address_state: TEXT
      address_zip: TEXT
      address_country: TEXT
      metadata_source: TEXT
      metadata_campaign: TEXT
      privacy_consent_gdpr: BOOLEAN
      privacy_consent_ccpa: BOOLEAN
      created_at: TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      updated_at: TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    audit_log:
      enabled: true
      table: audit_log
      fields:
      - customer_id
      - action
      - timestamp
      - status
  inputs:
    data: ${inputs.webhook_payload.customer}
    audit_action: customer_created
  outputs:
    inserted: boolean
    customer_id: string
  on_error:
    action: retry
    max_attempts: 3
    backoff: exponential
    fallback:
      action: fail
      message: Database insertion failed after retries
- name: monitor_pipeline_health
  plugin: monitoring.backend_health_monitor
  version: 1.0.0
  config:
    operation: record_metrics
    metrics_to_collect:
    - request_latency
    - success_rate
    - error_rate
    - validation_errors
    - privacy_violations
    health_thresholds:
      success_rate_min: 95
      latency_p95_max_ms: 500
      error_rate_max: 5
    alert_on_threshold_breach: true
  inputs:
    pipeline_result: ${summary.status}
    latency_ms: ${summary.total_duration_ms}
  outputs:
    health_status: string
    metrics: object
  on_error:
    action: log
    continue: true
- name: validate_security_config
  plugin: security.config_hardening
  version: 1.0.0
  config:
    operation: validate
    security_policies:
    - name: data_encryption_at_rest
      required: true
    - name: audit_logging
      required: true
    - name: api_authentication
      required: true
    - name: rate_limiting
      required: true
    auto_remediate: false
    report_violations: true
  outputs:
    compliant: boolean
    security_score: integer
  on_error:
    action: log
    continue: true
summary:
  compliance_reporting:
    plugin: compliance.generic_report_generator
    version: 1.0.0
    config:
      operation: generate_report
      report_type: privacy_compliance
      report_format: json
      include_sections:
      - gdpr_consent_statistics
      - ccpa_opt_out_statistics
      - audit_trail_summary
      - data_processing_activities
      output_path: /tmp/compliance_report.json
      schedule: daily
    inputs:
      data_source: ${pipeline.store_customer_data.outputs}
      audit_logs: ${pipeline.store_customer_data.audit_log}
outputs:
  success:
    type: boolean
    value: ${summary.status == 'success'}
  customer_id:
    type: string
    value: ${pipeline.store_customer_data.outputs.customer_id}
  health_status:
    type: object
    value: ${pipeline.monitor_pipeline_health.outputs.health_status}
  compliance_status:
    type: boolean
    value: ${pipeline.validate_privacy_compliance.outputs.compliant && pipeline.validate_security_config.outputs.compliant}
error_handling:
  default_policy: fail_fast
  retry_policy:
    max_attempts: 3
    backoff_strategy: exponential
    retry_on_errors:
    - network
    - timeout
    - rate_limit
  rollback_on_failure: true
  notification_channels:
  - type: log
    level: error
  - type: metrics
    service: monitoring.backend_health_monitor
copyright:
  owner: PlugPipe Team
  year: 2025
  notice: Copyright Â© 2025 PlugPipe Team. All rights reserved.
license: MIT
license_url: https://opensource.org/licenses/MIT
spdx_license_identifier: MIT
