author: PlugPipe Registry Team
category: registry
created_at: '2025-08-23'
dependency_analysis:
  auto_generated: true
  external_dependencies_required: true
  last_updated: '2025-09-21 23:01:46'
  stdlib_modules_declared: true
description: Database Plugin Registry Populator that bridges filesystem plugin discovery
  with database storage via Database Factory abstraction
discoverability: public
entrypoint: main.py
external_dependencies:
  install_method: pip
  packages:
  - yaml
  requirements_file: requirements.txt
input_schema:
  properties:
    plugs_directory:
      default: ${PLUGPIPE_ROOT:-/mnt/c/Project/PlugPipe}/plugs
      description: Path to plugins directory to scan
      type: string
    populate_database:
      default: true
      description: Whether to populate database after scanning
      type: boolean
    scan_only:
      default: false
      description: Only scan filesystem, don't populate database
      type: boolean
  type: object
name: database_plugin_registry
display_name: DatabasePluginRegistry
output_schema:
  properties:
    failed_inserts:
      description: Number of failed database inserts
      type: number
    plugins:
      description: Sample of discovered/processed plugins
      items:
        properties:
          category:
            type: string
          description:
            type: string
          name:
            type: string
          version:
            type: string
        type: object
      type: array
    success:
      description: Whether operation was successful
      type: boolean
    success_rate:
      description: Success percentage
      type: number
    successful_inserts:
      description: Number of successful database inserts
      type: number
    total_plugins:
      description: Total number of plugins processed
      type: number
  type: object
owner: plugpipe-team
revolutionary_capabilities:
- filesystem_to_database_bridge
- database_factory_integration
- bulk_plugin_population
- vendor_neutral_database_abstraction
- comprehensive_plugin_catalog_management
- zero_vendor_lock_in_database_operations
sbom: sbom/
status: production
stdlib_modules:
- asyncio
- importlib
- json
- logging
- os
- pathlib
- subprocess
- sys
- typing
tags:
- database
- registry
- plugins
- population
- factory
- bridge
- filesystem
- abstraction
updated_at: '2025-08-23'
version: 1.0.0
copyright:
  owner: PlugPipe Team
  year: 2025
  notice: Copyright Â© 2025 PlugPipe Team. All rights reserved.
license: MIT
license_url: https://opensource.org/licenses/MIT
spdx_license_identifier: MIT
