# Copyright Compliance CI Workflow
# Enforces 100% copyright compliance on all Python files and plugin manifests

name: Copyright Compliance

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'plugs/**/*.py'
      - 'pipes/**/*.py'
      - 'glues/**/*.py'
      - 'cores/**/*.py'
      - 'shares/**/*.py'
      - 'pp_hub/**/*.py'
      - 'utils/**/*.py'
      - 'scripts/**/*.py'
      - 'plugs/**/plug.yaml'
      - 'pipes/**/pipe.yaml'
      - 'glues/**/glue.yaml'
      - '.github/workflows/copyright-compliance.yaml'
      - 'plugs/ci/copyright_validator/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'plugs/**/*.py'
      - 'pipes/**/*.py'
      - 'glues/**/*.py'
      - 'cores/**/*.py'
      - 'shares/**/*.py'
      - 'pp_hub/**/*.py'
      - 'utils/**/*.py'
      - 'scripts/**/*.py'
      - 'plugs/**/plug.yaml'
      - 'pipes/**/pipe.yaml'
      - 'glues/**/glue.yaml'
  workflow_dispatch:

jobs:
  copyright-check:
    name: Copyright Compliance Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run Copyright Compliance Check (Using copyright_validator Plugin)
        id: compliance_check
        run: |
          echo "üîç Running copyright compliance validation using copyright_validator plugin..."

          # Use existing PlugPipe copyright_validator plugin
          ./pp run copyright_validator --action validate --scope all > /tmp/copyright_report.txt 2>&1
          EXIT_CODE=$?

          # Capture report for display
          cat /tmp/copyright_report.txt

          # Save report to output
          echo "report<<EOF" >> $GITHUB_OUTPUT
          cat /tmp/copyright_report.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          exit $EXIT_CODE

      - name: Upload Compliance Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: copyright-compliance-report
          path: /tmp/copyright_report.txt
          retention-days: 30

      - name: Comment PR with Violations (if PR)
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('/tmp/copyright_report.txt', 'utf8');

            const comment = `## ‚ùå Copyright Compliance Failed

            This PR introduces files without proper copyright headers.

            <details>
            <summary>View Compliance Report</summary>

            \`\`\`
            ${report}
            \`\`\`

            </details>

            ### How to Fix

            **For Python files:**
            Add SPDX header at the top:
            \`\`\`python
            # SPDX-License-Identifier: MIT
            # Copyright 2025 PlugPipe Team
            \`\`\`

            **For plugin manifests:**
            Add copyright field:
            \`\`\`yaml
            copyright:
              owner: "PlugPipe Team"
              year: 2025
              notice: "Copyright ¬© 2025 PlugPipe Team. All rights reserved."
            \`\`\`

            **Or run automated fix:**
            \`\`\`bash
            ./pp run copyright_validator --action fix
            \`\`\`
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: comment
            });

      - name: Block Non-Compliant Changes
        if: failure()
        run: |
          echo ""
          echo "=" * 60
          echo "‚ùå COPYRIGHT COMPLIANCE BLOCKED"
          echo "=" * 60
          echo ""
          echo "This commit/PR introduces files without proper copyright headers."
          echo "All PlugPipe source files MUST include copyright information."
          echo ""
          echo "See the compliance report above for details."
          echo ""
          exit 1
